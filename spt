#!/usr/bin/env bash

set -eu

# shellcheck disable=SC2034
VERSION="0.0.8"
SCRIPT_NAME=$(basename "$0")
REPO_VERSION=""
REPO_USER=""
REPO_NAME=""
USER_NAME=""
USER_EMAIL=""
ARCHITECTURE="all"
DEB_NAME=""
DEBTEMP_DIR="$HOME/.cache/spt"
PKG_DIR="$DEBTEMP_DIR/pkg"
DEB_DIR="$DEBTEMP_DIR/deb"


readlinkf() {
    [ "${1:-}" ] || return 1
    max_symlinks=40
    CDPATH='' # to avoid changing to an unexpected directory

    target=$1
    [ -e "${target%/}" ] || target=${1%"${1##*[!/]}"} # trim trailing slashes
    [ -d "${target:-/}" ] && target="$target/"

    cd -P . 2>/dev/null || return 1
    while [ "$max_symlinks" -ge 0 ] && max_symlinks=$((max_symlinks - 1)); do
        if [ ! "$target" = "${target%/*}" ]; then
            case $target in
            /*) cd -P "${target%/*}/" 2>/dev/null || break ;;
            *) cd -P "./${target%/*}" 2>/dev/null || break ;;
            esac
            target=${target##*/}
        fi

        if [ ! -L "$target" ]; then
            target="${PWD%/}${target:+/}${target}"
            printf '%s\n' "${target:-/}"
            return 0
        fi
        link=$(ls -dl -- "$target" 2>/dev/null) || break
        target=${link#*" $target -> "}
    done
    return 1
}

self=$(readlinkf "$0")
script_dir=${self%/*}

# shellcheck disable=SC1091
{
    . "${script_dir}/lib/getoptions.sh"
    . "${script_dir}/lib/utils.sh"
}

# shellcheck disable=SC1083
parser_definition() {
    setup REST help:usage abbr:true -- \
        "Usage: ${2##*/} [command] [options...] [arguments...]"
    msg -- '' 'Options:'
    disp :usage -h --help
    disp VERSION --version

    msg -- '' 'Commands: '
    msg -- 'Usee command -h for a command help.'
    cmd create -- "Creates a pre-package"
    cmd open -- "Open the pre-package with VSCode."
    cmd generate -- "Generate a Debian package."
    cmd install -- "Install the local Debian package."

    msg -- '' "Examples:


Display the version:
    $SCRIPT_NAME --version
Display help:
    $SCRIPT_NAME -h | --help
"
}

eval "$(getoptions parser_definition parse "$0") exit 1"
parse "$@"
eval "set -- $REST"

parser_definition_create(){
    setup REST plus:true help:usage abbr:true -- \
        "Usage: ${2##*/} create [options...] [arguments...]" ''

    msg -- 'Creates a pre-debian package.'
    # msg -- 'All parameters accepts --param value and --param=value form.' ''

    # msg label:"OPTIONS" -- "DESCRIPTION"
    flag CODE -c --code -- "Open the created pre-debian package with VSCode."
    disp :usage -h --help
}

parser_definition_generate(){
    setup REST plus:true help:usage abbr:true -- \
        "Usage: ${2##*/} generate [options...] [arguments...]" ''

    msg -- 'Generate a debian package.'
    # msg -- 'All parameters accepts --param value and --param=value form.' ''

    # msg label:"OPTIONS" -- "DESCRIPTION"
    disp :usage -h --help
}

parser_definition_install(){
    setup REST plus:true help:usage abbr:true -- \
        "Usage: ${2##*/} install [options...] [arguments...]" ''

    msg -- 'Install the local debian package.'
    # msg -- 'All parameters accepts --param value and --param=value form.' ''

    # msg label:"OPTIONS" -- "DESCRIPTION"
    disp :usage -h --help
}

if [ $# -gt 0 ]; then
    cmd=$1
    shift
    case $cmd in
    create)
        eval "$(getoptions parser_definition_create parse "$0")"
        parse "$@"
        eval "set -- $REST"
        # shellcheck disable=SC1091
        . "${script_dir}/lib/create.sh"
        fn_create "$@"
        ;;
    generate)
        eval "$(getoptions parser_definition_generate parse "$0")"
        parse "$@"
        eval "set -- $REST"
        # shellcheck disable=SC1091
        . "${script_dir}/lib/generate.sh"
        fn_generate "$@"
        ;;
    install)
        eval "$(getoptions parser_definition_install parse "$0")"
        parse "$@"
        eval "set -- $REST"
        # shellcheck disable=SC1091
        . "${script_dir}/lib/install.sh"
        fn_install "$@"
        ;;
    --) ;; # no subcommand, arguments only
    esac
fi


